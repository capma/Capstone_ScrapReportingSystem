
@model Stackpole.ViewModels.ScrapBasicInfoModal

@*@Styles.Render("~/Content/scrap")*@


<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
    <h4 class="modal-title">Add scrap</h4>
</div>

@using (Html.BeginForm("CreateNewScrapPostModal", "ScrapDetails", FormMethod.Post, new { id = "frm-add-scrap" }))
{
    @Html.AntiForgeryToken()

<div class="modal-body">
    <div class="form-horizontal">
    @*<div class="form">*@
        <p style="background-color: yellow; font-size: 20px;">Anytime you find a stray part in your area with no scrap reason identified for it; scrap it under scrap reason “5S”.</p>
        <div class="row">
            <div class="column">
            @*<div class="col-sm-6">*@
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @*@Html.HiddenFor(model => model.scrapDetailModal.id)*@
                @Html.HiddenFor(model => model.scrapDetailModal.scrapId)
                @Html.HiddenFor(m => m.scrapModal.plantId)
                @Html.HiddenFor(m => m.scrapModal.departmentId)
                @Html.HiddenFor(m => m.scrapModal.operationId)
                @Html.HiddenFor(m => m.operationIdInt)
                @Html.HiddenFor(m => m.scrapModal.partId)
                @Html.HiddenFor(m => m.scrapModal.unitCost)
                @Html.HiddenFor(m => m.scrapModal.unitWeight)
                @Html.HiddenFor(m => m.scrapModal.date)

                <div class="form-group">
                    @Html.LabelFor(model => model.scrapDetailModal.machineId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 form-field">
                        @Html.DropDownListFor(model => model.scrapDetailModal.machineId, Model.Machines, new { @class = "form-control", Name = "scrapDetailModal.machineId" })
                        @Html.ValidationMessageFor(model => model.scrapDetailModal.machineId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.scrapDetailModal.reasonId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 form-field">
                        @Html.DropDownListFor(model => model.scrapDetailModal.reasonId, Model.Reasons, new { @class = "form-control", Name = "scrapDetailModal.reasonId", @onchange = "selectReason(this.value)" })
                        @Html.ValidationMessageFor(model => model.scrapDetailModal.reasonId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.scrapDetailModal.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 form-field">
                        @Html.EditorFor(model => model.scrapDetailModal.quantity, new { htmlAttributes = new { @class = "form-control quantity" } })
                        @Html.ValidationMessageFor(model => model.scrapDetailModal.quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.scrapDetailModal.weight, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 form-field">
                        @Html.EditorFor(model => model.scrapDetailModal.weight, new { htmlAttributes = new { @class = "form-control weight" } })
                        @Html.ValidationMessageFor(model => model.scrapDetailModal.weight, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group cost">
                    @Html.LabelFor(model => model.scrapDetailModal.cost, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 form-field">
                        @Html.EditorFor(model => model.scrapDetailModal.cost, new { htmlAttributes = new { @class = "form-control cost" } })
                        @Html.ValidationMessageFor(model => model.scrapDetailModal.cost, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.scrapDetailModal.employeeNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 form-field">
                        @Html.EditorFor(model => model.scrapDetailModal.employeeNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.scrapDetailModal.employeeNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="column-numpad">
            @*<div class="col-sm-6">*@
                <p>Use the "ON SCREEN KEY PAD" to enter the scrap amount. Use the "RESET" key to correct any errors.</p>
                <div class="row row-numpad">
                    <input type="button" class="col-md-4 btn-num btn-7" onclick="tapNum(this.value)" value="7">
                    <input type="button" class="col-md-4 btn-num btn-8" onclick="tapNum(this.value)" value="8">
                    <input type="button" class="col-md-4 btn-num btn-9" onclick="tapNum(this.value)" value="9">

                    <input type="button" class="col-md-4 btn-num btn-4" onclick="tapNum(this.value)" value="4">
                    <input type="button" class="col-md-4 btn-num btn-5" onclick="tapNum(this.value)" value="5">
                    <input type="button" class="col-md-4 btn-num btn-6" onclick="tapNum(this.value)" value="6">

                    <input type="button" class="col-md-4 btn-num btn-1" onclick="tapNum(this.value)" value="1">
                    <input type="button" class="col-md-4 btn-num btn-2" onclick="tapNum(this.value)" value="2">
                    <input type="button" class="col-md-4 btn-num btn-3" onclick="tapNum(this.value)" value="3">

                    <input type="button" class="col-md-4 btn-num btn-0" onclick="tapNum(this.value)" value="0">
                    <input type="button" class="col-md-8 btn-num btn-reset" onclick="tapNum(this.value)" value="Reset">
                    
                    
                    @*<div class="row">
                        <input type="button" class="column btn-num btn-7" onclick="tapNum(this.value)" value="7">
                        <input type="button" class="column btn-num btn-8" onclick="tapNum(this.value)" value="8">
                        <input type="button" class="column btn-num btn-9" onclick="tapNum(this.value)" value="9">
                    </div>
                    <div class="row">
                        <input type="button" class="column btn-num btn-4" onclick="tapNum(this.value)" value="4">
                        <input type="button" class="column btn-num btn-5" onclick="tapNum(this.value)" value="5">
                        <input type="button" class="column btn-num btn-6" onclick="tapNum(this.value)" value="6">
                    </div>
                    <div class="row">
                        <input type="button" class="column btn-num btn-1" onclick="tapNum(this.value)" value="1">
                        <input type="button" class="column btn-num btn-2" onclick="tapNum(this.value)" value="2">
                        <input type="button" class="column btn-num btn-3" onclick="tapNum(this.value)" value="3">
                    </div>
                    <div class="row">
                        <input type="button" class="column btn-num btn-0" onclick="tapNum(this.value)" value="0">
                        <input type="button" class="column btn-num btn-reset" onclick="tapNum(this.value)" value="Reset">
                    </div>*@
                </div>
            </div>
        </div>

    </div>
</div>

    <div class="modal-footer">
        <input type="submit" value="Create" class="btn btn-default btn-submit-add-scrap" />
        <button type="button" class="btn btn-primary" data-dismiss="modal">Back to List</button>
    </div>
}